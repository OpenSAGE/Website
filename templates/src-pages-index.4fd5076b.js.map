{"version":3,"sources":["webpack:////home/travis/build/OpenSAGE/Website/src/components/Layout.js","webpack:////home/travis/build/OpenSAGE/Website/src/pages/index.js","webpack:////home/travis/build/OpenSAGE/Website/src/util.js"],"names":["Row","_ref","children","react_default","a","createElement","className","Screenshot","url","pathParts","thumbName","file","description","href","concat","title","src","split","length","replace","_toConsumableArray","slice","join","alt","withSiteData","Fragment","lib","Layout_Row","pages_Screenshot"],"mappings":"4HAEaA,EAAM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOJ,yVCG3D,IAAMK,EAAa,SAAAN,GAAA,ICLYO,EACvBC,EAGAC,EDCcC,EAAHV,EAAGU,KAAMC,EAATX,EAASW,YAAT,OACjBT,EAAAC,EAAAC,cAAA,KACEC,UAAU,6BACVO,KAAI,uBAAAC,OAAyBH,GAC7BI,MAAOH,GAEPT,EAAAC,EAAAC,cAAA,OACEC,UAAU,mBACVU,KCbyBR,EDaN,uBAAAM,OAAwBH,GCZzCF,EAAYD,EAAIS,MAAM,KAGtBP,EAFWD,EAAUA,EAAUS,OAAS,GAEnBC,QAAQ,iBAAkB,cACnC,GAAAL,OAAAM,EACbX,EAAUY,MAAM,EAAGZ,EAAUS,OAAS,IADzB,CAEhBR,IACAY,KAAK,MDMHC,IAAKX,MAKIY,iCAAa,kBAC1BrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,KAAD,KACEvB,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,qBADF,wKAKAF,EAAAC,EAAAC,cAAA,4IAKAF,EAAAC,EAAAC,cAACsB,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAD,CACEjB,KAAK,mBACLC,YAAY,kFAIhBT,EAAAC,EAAAC,cAACsB,EAAD,KACExB,EAAAC,EAAAC,cAACuB,EAAD,CACEjB,KAAK,mBACLC,YAAY,yCAEdT,EAAAC,EAAAC,cAACuB,EAAD,CACEjB,KAAK,mBACLC,YAAY","file":"templates/src-pages-index.4fd5076b.js","sourcesContent":["import React from \"react\"\n\nexport const Row = ({ children }) => <div className=\"row\">{children}</div>\n","import React from \"react\"\nimport { withSiteData, Head } from \"react-static\"\nimport { Row } from \"../components/Layout\"\nimport { toThumbnailUrl } from \"../util\"\n\nconst Screenshot = ({ file, description }) => (\n  <a\n    className=\"responsive-image-container\"\n    href={`/assets/screenshots/${file}`}\n    title={description}\n  >\n    <img\n      className=\"responsive-image\"\n      src={toThumbnailUrl(`/assets/screenshots/${file}`)}\n      alt={description}\n    />\n  </a>\n)\n\nexport default withSiteData(() => (\n  <>\n    <Head>\n      <title>OpenSAGE</title>\n    </Head>\n    <p>\n      <b>OpenSAGE</b> is a free, open source re-implementation of SAGE, the 3D\n      real time strategy (RTS) engine used in Command & Conquerâ„¢: Generals and\n      other RTS titles from EA Pacific.\n    </p>\n    <p>\n      The engine is written in modern C#, and runs on Windows, macOS and Linux\n      using .NET Core. And a little bit more text like this.\n    </p>\n\n    <Row>\n      <Screenshot\n        file=\"screenshot-1.jpg\"\n        description=\"A picture of the Command & Conquer: Generals main menu, running in OpenSAGE.\"\n      />\n    </Row>\n\n    <Row>\n      <Screenshot\n        file=\"screenshot-1.jpg\"\n        description=\"An another picture of the main menu.\"\n      />\n      <Screenshot\n        file=\"screenshot-1.jpg\"\n        description=\"The last picture of the main menu.\"\n      />\n    </Row>\n  </>\n))\n","export function toThumbnailUrl(url) {\n  const pathParts = url.split(\"/\")\n  const fileName = pathParts[pathParts.length - 1]\n\n  const thumbName = fileName.replace(/(\\.png)|(.jpg)/, \"-thumb.jpg\")\n  const thumbPath = [\n    ...pathParts.slice(0, pathParts.length - 1),\n    thumbName\n  ].join(\"/\")\n\n  return thumbPath\n}\n"],"sourceRoot":""}