{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/Layout.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Header.js","webpack:///./src/components/Nav.js","webpack:///./src/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Post","_ref","post","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","slug","title","moment","date","format","__webpack_exports__","_ref2","posts","data","allMarkdownRemark","edges","map","x","node","frontmatter","postsByYear","groupBy","year","years","orderBy","uniq","Object","keys","reverse","_Layout__WEBPACK_IMPORTED_MODULE_7__","Fragment","key","query","Row","children","react_default","className","__webpack_require__","d","screenshotImage","Screenshot","_ref$img$image","img","image","source","thumbnails","description","href","src","srcSet","sizes","alt","DevelopmentUpdates","length","style","marginTop","marginBottom","_ref3","blog","_ref4","Layout","pages_DevelopmentUpdates","latestPosts","Layout_Row","pages_Screenshot","mainMenu","viewer2","ingame1","viewer3","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","currentYear","Date","now","getFullYear","Footer","Header","es","Nav","LinkNavItem","name","RouteNavItem","gatsby_browser_entry","Layout_Layout","Helmet","content","Header_Header","Nav_Nav","Nav_RouteNavItem","Nav_LinkNavItem","id","Footer_Footer","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-1d26c4b2bb534136a8c2.js","sourcesContent":["import React from \"react\"\nimport moment from \"moment\"\nimport { groupBy, uniq, orderBy } from \"lodash\"\nimport { Link, graphql } from \"gatsby\"\n\nimport { Layout } from \"../Layout\"\n\nexport const Post = ({ post }) => (\n  <li>\n    <Link to={`/blog/${post.slug}/`}>\n      {post.title} ({moment(post.date).format(\"YYYY-MM-DD\")})\n    </Link>\n  </li>\n)\n\nexport default ({ data }) => {\n  const posts = data.allMarkdownRemark.edges.map(x => x.node.frontmatter)\n  const postsByYear = groupBy(posts, post => moment(post.date).year())\n  const years = orderBy(uniq(Object.keys(postsByYear))).reverse()\n\n  return (\n    <Layout title=\"Blog - OpenSAGE\">\n      <h1>The OpenSAGE blog</h1>\n      {years.map(year => (\n        <React.Fragment key={year}>\n          <h2 key={year}>{year}</h2>\n          <ul>\n            {postsByYear[year].map(post => (\n              <Post key={post.slug} post={post} />\n            ))}\n          </ul>\n        </React.Fragment>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPosts {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___slug] }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\n\nexport const Row = ({ children }) => <div className=\"row\">{children}</div>\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport { Layout } from \"../Layout\"\nimport { Row } from \"../components/Layout\"\nimport { Post } from \"./blog\"\n\nconst Screenshot = ({\n  img: {\n    image: { source, thumbnails }\n  },\n  description\n}) => (\n  <a\n    className=\"responsive-image-container\"\n    href={source.src}\n    title={description}\n  >\n    <img\n      className=\"responsive-image\"\n      srcSet={thumbnails.srcSet}\n      src={thumbnails.src}\n      sizes={thumbnails.sizes}\n      alt={description}\n    />\n  </a>\n)\n\nconst DevelopmentUpdates = ({ posts: { edges } }) =>\n  edges.length === 0 ? null : (\n    <section style={{ marginTop: \"1em\", marginBottom: \"2em\" }}>\n      <strong>Latest development updates</strong>\n      <ul>\n        {edges.map(({ node: { frontmatter } }) => (\n          <Post key={frontmatter.slug} post={frontmatter} />\n        ))}\n      </ul>\n    </section>\n  )\n\nexport default ({ data }) => (\n  <Layout>\n    <>\n      <p>\n        <b>OpenSAGE</b> is a free, open source re-implementation of SAGE, the 3D\n        real-time strategy engine used in Command & Conquer™: Generals and other\n        RTS titles from EA Pacific.\n      </p>\n\n      <DevelopmentUpdates posts={data.latestPosts} />\n\n      <Row>\n        <Screenshot\n          img={data.mainMenu}\n          description=\"Command & Conquer: Generals main menu, running in OpenSAGE.\"\n        />\n      </Row>\n\n      <Row>\n        <Screenshot\n          img={data.viewer2}\n          description=\"OpenSAGE asset viewer showing a map from the China campaign of Generals with shadow maps enabled.\"\n        />\n        <Screenshot\n          img={data.ingame1}\n          description=\"OpenSAGE in-game, running a skirmish match as a USA player.\"\n        />\n        <Screenshot\n          img={data.viewer3}\n          description=\"OpenSAGE asset viewer displaying the credits window from Zero Hour.\"\n        />\n      </Row>\n\n      <p>\n        The engine is under active development by a small group of volunteers.\n        While the engine doesn't yet implement much of proper gameplay for any\n        of the supported games, it can already load most types of assets from\n        the first few SAGE titles, load into maps and display user interfaces.\n      </p>\n\n      <p>\n        The engine is written in modern C# and runs on Windows, macOS and Linux\n        using <a href=\"https://github.com/dotnet/core\">.NET Core</a>. We use{\" \"}\n        <a href=\"https://mellinoe.github.io/veldrid-docs/index.html\">Veldrid</a>{\" \"}\n        in order to support a variety of graphics APIs (including Direct3D 11,\n        OpenGL and Metal) with a single codebase. The source code is available\n        on <a href=\"https://github.com/OpenSAGE/OpenSAGE\">GitHub</a> under the\n        LGPLv3 license.\n      </p>\n    </>\n  </Layout>\n)\n\nexport const screenshotImage = graphql`\n  fragment screenshotImage on File {\n    image: childImageSharp {\n      source: fixed(width: 1000, quality: 95) {\n        src\n      }\n      thumbnails: fluid(maxWidth: 650, quality: 85, toFormat: JPG) {\n        src\n        srcSet\n        sizes\n      }\n    }\n  }\n`\n\nexport const query = graphql`\n  query {\n    mainMenu: file(relativePath: { eq: \"main-menu.jpg\" }) {\n      ...screenshotImage\n    }\n    viewer2: file(relativePath: { eq: \"viewer-2.png\" }) {\n      ...screenshotImage\n    }\n    ingame1: file(relativePath: { eq: \"in-game-1.png\" }) {\n      ...screenshotImage\n    }\n    viewer3: file(relativePath: { eq: \"viewer-3.png\" }) {\n      ...screenshotImage\n    }\n    latestPosts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___slug] }\n      limit: 3\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\n\nimport \"./Footer.css\"\n\nconst currentYear = new Date(Date.now()).getFullYear()\n\nexport const Footer = () => (\n  <footer>\n    <div className=\"footer__content\">\n      <p>\n        OpenSAGE is not associated with Electronic Arts or any other company.\n        All trademarks are property of their respective owners. Screenshots of\n        copyrighted works are only used for demonstration purposes.\n      </p>\n      <p>© OpenSAGE {currentYear}</p>\n    </div>\n  </footer>\n)\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\n\nimport \"./Header.css\"\n\nexport const Header = ({ children }) => (\n  <header>\n    <Link to=\"/\">\n      <div className=\"header__logo\" />\n    </Link>\n    {children}\n  </header>\n)\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"./Nav.css\"\n\nexport const Nav = ({ children }) => (\n  <nav className=\"navbar\">\n    <ol className=\"navbar__items\">{children}</ol>\n  </nav>\n)\n\nexport const LinkNavItem = ({ name, to }) => (\n  <li className=\"nav-item\">\n    <a href={to}>{name}</a>\n  </li>\n)\n\nexport const RouteNavItem = ({ name, to }) => (\n  <li className=\"nav-item\">\n    <Link to={to}>{name}</Link>\n  </li>\n)\n","import React from \"react\"\n\nimport { Helmet } from \"react-helmet\"\n\nimport { Footer } from \"./components/Footer\"\nimport { Header } from \"./components/Header\"\nimport { Nav, LinkNavItem, RouteNavItem } from \"./components/Nav\"\n\nexport const Layout = ({ children, title }) => (\n  <div className=\"page\">\n    <Helmet>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <title>{title || \"OpenSAGE\"}</title>\n    </Helmet>\n    <Header>\n      <Nav>\n        <RouteNavItem name=\"About\" to=\"/\" />\n        <RouteNavItem name=\"Blog\" to=\"/blog\" />\n        <LinkNavItem name=\"GitHub\" to=\"https://github.com/OpenSAGE/OpenSAGE\" />\n        <LinkNavItem name=\"Discord\" to=\"https://discord.gg/G2FhZUT\" />\n      </Nav>\n    </Header>\n    <div id=\"main-content\">{children}</div>\n    <Footer />\n  </div>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}